function x = trilinos(A, b)
% trilinos -- Wrap multi-level linear solver library Trilinos.
%
% SYNOPSIS:
%   x = trilinos(A, b)
%
% DESCRIPTION:
%   Solves the system Ax = b of linear equations by means of the Trilinos
%   multi-level solver package distributed by Sandia National Labs:
%
%       http://trilinos.sandia.gov/
%
% PARAMETERS:
%   A - System matrix.  Assumed to be SPARSE.
%   b - System right hand side.
%
% RETURNS:
%   x - System solution.
%
%
% EXAMPLE
%  
%  A=sprand(10,10,0.6);
%  A=A*A';
%  x=rand(10,1);
%  b=A*x;
%  y=trilinosxml(A,b);
%  disp(norm(y-x));
%
%
%

% $Id: trilinos.m 1271 2009-01-22 09:48:27Z jrn $

   fn = tempname('.');
   [f, msg] = fopen (fn, 'wt');
   if f < 0, error(msg); end
   assert(issparse(A));

   fprintf(f, [...
   '<?xml version = ''1.0'' encoding = ''ISO-8859-1''?>\n',...
   '<ParameterGroup name="trilinos_cg_ml" id="root">\n',...
    '<Parameter type="string" name="solver_library"                 value="trilinos"/>\n',...
    '<!---->\n',...
    '<Parameter type="string" name="solver_type"                    value="CG"/>\n',...
    '<Parameter type="bool"   name="use_multilevel_preconditioner"  value="true"/>\n',...
    '<Parameter type="bool"   name="estimate condition number"      value="false"/>\n',...
    '<Parameter type="int"    name="solver output"                  value="0"/>\n',...
    '<Parameter type="int"    name="maximum iterations"             value="1000"/>\n',...
    '<Parameter type="double" name="tolerance"                      value="1e-10"/>\n',...
    '<!---->\n',...
    '<Parameter type="int"    name="output"                         value="0"/>\n',...
    '<Parameter type="int"    name="cycle applications"             value="1"/>\n',...
    '<Parameter type="int"    name="max levels"                     value="5"/>\n',...
    '<Parameter type="string" name="increasing or decreasing"       value="increasing"/>\n',...
    '<Parameter type="double" name="aggregation: threshold"         value="0.06"/>\n',...
    '<Parameter type="string" name="aggregation: type"              value="MIS"/>\n',...
    '<Parameter type="double" name="aggregation: damping factor"    value="1.33"/>\n',...
    '<Parameter type="bool"   name="aggregation: symmetrize"        value="true"/>\n',...
    '<Parameter type="string" name="smoother: type"                 value="MLS"/>\n',...
    '<Parameter type="string" name="smoother: pre or post"          value="both"/>\n',...
    '<Parameter type="int"    name="smoother: sweeps"               value="4"/>\n',...
    '<Parameter type="int"    name="smoother: MLS polynomial order" value="3"/>\n',...
    '<Parameter type="int"    name="coarse: max size"               value="16"/>\n',...
    '<Parameter type="string" name="coarse: type"                   value="symmetric Gauss-Seidel"/>\n',...
    '<Parameter type="int"    name="coarse: sweeps"                 value="1"/>\n',...
    '</ParameterGroup>\n']);
   fclose(f);

   c = onCleanup(@() delete(fn)); %#ok
   try
      x = matlab_solve(A, b, fn);
   catch ME
      idSegLast = regexp(ME.identifier, '(?<=:)\w+$', 'match');
      if strcmp(idSegLast, 'UndefinedFunction')
         error('In trilinos.m:  mex function matlab_solve.mex* not avaliable');
      end
      rethrow(ME);
   end
      
end
